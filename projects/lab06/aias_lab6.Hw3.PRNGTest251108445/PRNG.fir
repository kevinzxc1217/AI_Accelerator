circuit PRNG :
  module LFSR_Galois :
    input clock : Clock
    input reset : Reset
    output io : { flip seed : { valid : UInt<1>, bits : UInt<4>}, rndNum : UInt<4>}

    wire _WIRE : UInt<1>[4] @[PRNG.scala 12:35]
    _WIRE[0] <= UInt<1>("h0") @[PRNG.scala 12:35]
    _WIRE[1] <= UInt<1>("h0") @[PRNG.scala 12:35]
    _WIRE[2] <= UInt<1>("h0") @[PRNG.scala 12:35]
    _WIRE[3] <= UInt<1>("h0") @[PRNG.scala 12:35]
    reg shiftReg : UInt<1>[4], clock with :
      reset => (reset, _WIRE) @[PRNG.scala 12:27]
    when io.seed.valid : @[PRNG.scala 14:24]
      node _T = bits(io.seed.bits, 0, 0) @[PRNG.scala 15:33]
      node _T_1 = bits(io.seed.bits, 1, 1) @[PRNG.scala 15:33]
      node _T_2 = bits(io.seed.bits, 2, 2) @[PRNG.scala 15:33]
      node _T_3 = bits(io.seed.bits, 3, 3) @[PRNG.scala 15:33]
      shiftReg[0] <= _T @[PRNG.scala 15:61]
      shiftReg[1] <= _T_1 @[PRNG.scala 15:61]
      shiftReg[2] <= _T_2 @[PRNG.scala 15:61]
      shiftReg[3] <= _T_3 @[PRNG.scala 15:61]
    else :
      shiftReg[0] <= shiftReg[1] @[PRNG.scala 20:28]
      shiftReg[1] <= shiftReg[2] @[PRNG.scala 20:28]
      shiftReg[2] <= shiftReg[3] @[PRNG.scala 20:28]
      shiftReg[3] <= shiftReg[0] @[PRNG.scala 20:28]
      node _T_4 = xor(shiftReg[3], shiftReg[0]) @[PRNG.scala 24:58]
      shiftReg[2] <= _T_4 @[PRNG.scala 24:43]
    node lo = cat(shiftReg[1], shiftReg[0]) @[PRNG.scala 27:27]
    node hi = cat(shiftReg[3], shiftReg[2]) @[PRNG.scala 27:27]
    node _T_5 = cat(hi, lo) @[PRNG.scala 27:27]
    io.rndNum <= _T_5 @[PRNG.scala 27:15]

  module PRNG :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip gen : UInt<1>, puzzle : UInt<4>[4], ready : UInt<1>}

    reg myReg : UInt<4>, clock with :
      reset => (reset, UInt<4>("h0")) @[PRNG.scala 74:28]
    reg cnt : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[PRNG.scala 75:26]
    reg cnt2 : UInt<2>, clock with :
      reset => (reset, UInt<2>("h0")) @[PRNG.scala 76:27]
    inst lfsrInst of LFSR_Galois @[PRNG.scala 77:26]
    lfsrInst.clock <= clock
    lfsrInst.reset <= reset
    wire _WIRE : UInt<4>[4] @[PRNG.scala 78:31]
    _WIRE[0] <= UInt<4>("h0") @[PRNG.scala 78:31]
    _WIRE[1] <= UInt<4>("h0") @[PRNG.scala 78:31]
    _WIRE[2] <= UInt<4>("h0") @[PRNG.scala 78:31]
    _WIRE[3] <= UInt<4>("h0") @[PRNG.scala 78:31]
    reg lfsr : UInt<4>[4], clock with :
      reset => (reset, _WIRE) @[PRNG.scala 78:23]
    reg state : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[PRNG.scala 81:28]
    wire _WIRE_1 : UInt<4>[4] @[PRNG.scala 82:29]
    _WIRE_1[0] <= UInt<4>("h0") @[PRNG.scala 82:29]
    _WIRE_1[1] <= UInt<4>("h0") @[PRNG.scala 82:29]
    _WIRE_1[2] <= UInt<4>("h0") @[PRNG.scala 82:29]
    _WIRE_1[3] <= UInt<4>("h0") @[PRNG.scala 82:29]
    io.puzzle[0] <= _WIRE_1[0] @[PRNG.scala 82:19]
    io.puzzle[1] <= _WIRE_1[1] @[PRNG.scala 82:19]
    io.puzzle[2] <= _WIRE_1[2] @[PRNG.scala 82:19]
    io.puzzle[3] <= _WIRE_1[3] @[PRNG.scala 82:19]
    io.ready <= UInt<1>("h0") @[PRNG.scala 83:18]
    lfsrInst.io.seed.valid <= UInt<1>("h0") @[PRNG.scala 84:32]
    lfsrInst.io.seed.bits <= UInt<1>("h1") @[PRNG.scala 85:31]
    node _T = eq(UInt<1>("h0"), state) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(cnt2, UInt<2>("h3")) @[PRNG.scala 90:27]
      when _T_1 : @[PRNG.scala 90:35]
        cnt2 <= UInt<1>("h0") @[PRNG.scala 91:30]
        state <= UInt<1>("h1") @[PRNG.scala 92:31]
    else :
      node _T_2 = eq(UInt<1>("h1"), state) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = eq(io.gen, UInt<1>("h1")) @[PRNG.scala 96:29]
        when _T_3 : @[PRNG.scala 96:40]
          state <= UInt<1>("h0") @[PRNG.scala 97:31]
    node _T_4 = eq(state, UInt<1>("h0")) @[PRNG.scala 102:20]
    when _T_4 : @[PRNG.scala 102:29]
      node _T_5 = eq(cnt, UInt<1>("h0")) @[PRNG.scala 103:25]
      when _T_5 : @[PRNG.scala 104:17]
        lfsrInst.io.seed.valid <= UInt<1>("h1") @[PRNG.scala 105:48]
        lfsrInst.io.seed.bits <= UInt<1>("h1") @[PRNG.scala 106:47]
      else :
        lfsrInst.io.seed.valid <= UInt<1>("h0") @[PRNG.scala 109:48]
        myReg <= lfsrInst.io.rndNum @[PRNG.scala 110:31]
        node _T_6 = eq(myReg, UInt<4>("ha")) @[PRNG.scala 111:35]
        when _T_6 : @[PRNG.scala 111:43]
          lfsr[cnt2] <= UInt<1>("h0") @[PRNG.scala 111:54]
        else :
          node _T_7 = eq(myReg, UInt<4>("hb")) @[PRNG.scala 112:40]
          when _T_7 : @[PRNG.scala 112:48]
            lfsr[cnt2] <= UInt<1>("h1") @[PRNG.scala 112:59]
          else :
            node _T_8 = eq(myReg, UInt<4>("hc")) @[PRNG.scala 113:40]
            when _T_8 : @[PRNG.scala 113:48]
              lfsr[cnt2] <= UInt<2>("h2") @[PRNG.scala 113:59]
            else :
              node _T_9 = eq(myReg, UInt<4>("hd")) @[PRNG.scala 114:40]
              when _T_9 : @[PRNG.scala 114:48]
                lfsr[cnt2] <= UInt<2>("h3") @[PRNG.scala 114:59]
              else :
                node _T_10 = eq(myReg, UInt<4>("he")) @[PRNG.scala 115:40]
                when _T_10 : @[PRNG.scala 115:48]
                  lfsr[cnt2] <= UInt<3>("h4") @[PRNG.scala 115:59]
                else :
                  node _T_11 = eq(myReg, UInt<4>("hf")) @[PRNG.scala 116:40]
                  when _T_11 : @[PRNG.scala 116:48]
                    lfsr[cnt2] <= UInt<3>("h5") @[PRNG.scala 116:59]
                  else :
                    node _T_12 = eq(myReg, UInt<5>("h10")) @[PRNG.scala 117:40]
                    when _T_12 : @[PRNG.scala 117:48]
                      lfsr[cnt2] <= UInt<3>("h6") @[PRNG.scala 117:59]
                    else :
                      lfsr[cnt2] <= myReg @[PRNG.scala 118:47]
        node _T_13 = add(cnt2, UInt<1>("h1")) @[PRNG.scala 119:38]
        node _T_14 = tail(_T_13, 1) @[PRNG.scala 119:38]
        cnt2 <= _T_14 @[PRNG.scala 119:30]
      node _T_15 = add(cnt, UInt<1>("h1")) @[PRNG.scala 121:27]
      node _T_16 = tail(_T_15, 1) @[PRNG.scala 121:27]
      cnt <= _T_16 @[PRNG.scala 121:21]
    node _T_17 = eq(state, UInt<1>("h1")) @[PRNG.scala 124:20]
    when _T_17 : @[PRNG.scala 124:31]
      node _T_18 = eq(lfsr[0], lfsr[1]) @[PRNG.scala 128:53]
      when _T_18 : @[PRNG.scala 128:64]
        node _T_19 = add(lfsr[0], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_20 = tail(_T_19, 1) @[PRNG.scala 129:67]
        lfsr[0] <= _T_20 @[PRNG.scala 129:57]
      node _T_21 = eq(lfsr[0], lfsr[2]) @[PRNG.scala 128:53]
      when _T_21 : @[PRNG.scala 128:64]
        node _T_22 = add(lfsr[0], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_23 = tail(_T_22, 1) @[PRNG.scala 129:67]
        lfsr[0] <= _T_23 @[PRNG.scala 129:57]
      node _T_24 = eq(lfsr[0], lfsr[3]) @[PRNG.scala 128:53]
      when _T_24 : @[PRNG.scala 128:64]
        node _T_25 = add(lfsr[0], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_26 = tail(_T_25, 1) @[PRNG.scala 129:67]
        lfsr[0] <= _T_26 @[PRNG.scala 129:57]
      node _T_27 = eq(lfsr[1], lfsr[0]) @[PRNG.scala 128:53]
      when _T_27 : @[PRNG.scala 128:64]
        node _T_28 = add(lfsr[1], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_29 = tail(_T_28, 1) @[PRNG.scala 129:67]
        lfsr[1] <= _T_29 @[PRNG.scala 129:57]
      node _T_30 = eq(lfsr[1], lfsr[2]) @[PRNG.scala 128:53]
      when _T_30 : @[PRNG.scala 128:64]
        node _T_31 = add(lfsr[1], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_32 = tail(_T_31, 1) @[PRNG.scala 129:67]
        lfsr[1] <= _T_32 @[PRNG.scala 129:57]
      node _T_33 = eq(lfsr[1], lfsr[3]) @[PRNG.scala 128:53]
      when _T_33 : @[PRNG.scala 128:64]
        node _T_34 = add(lfsr[1], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_35 = tail(_T_34, 1) @[PRNG.scala 129:67]
        lfsr[1] <= _T_35 @[PRNG.scala 129:57]
      node _T_36 = eq(lfsr[2], lfsr[0]) @[PRNG.scala 128:53]
      when _T_36 : @[PRNG.scala 128:64]
        node _T_37 = add(lfsr[2], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_38 = tail(_T_37, 1) @[PRNG.scala 129:67]
        lfsr[2] <= _T_38 @[PRNG.scala 129:57]
      node _T_39 = eq(lfsr[2], lfsr[1]) @[PRNG.scala 128:53]
      when _T_39 : @[PRNG.scala 128:64]
        node _T_40 = add(lfsr[2], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_41 = tail(_T_40, 1) @[PRNG.scala 129:67]
        lfsr[2] <= _T_41 @[PRNG.scala 129:57]
      node _T_42 = eq(lfsr[2], lfsr[3]) @[PRNG.scala 128:53]
      when _T_42 : @[PRNG.scala 128:64]
        node _T_43 = add(lfsr[2], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_44 = tail(_T_43, 1) @[PRNG.scala 129:67]
        lfsr[2] <= _T_44 @[PRNG.scala 129:57]
      node _T_45 = eq(lfsr[3], lfsr[0]) @[PRNG.scala 128:53]
      when _T_45 : @[PRNG.scala 128:64]
        node _T_46 = add(lfsr[3], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_47 = tail(_T_46, 1) @[PRNG.scala 129:67]
        lfsr[3] <= _T_47 @[PRNG.scala 129:57]
      node _T_48 = eq(lfsr[3], lfsr[1]) @[PRNG.scala 128:53]
      when _T_48 : @[PRNG.scala 128:64]
        node _T_49 = add(lfsr[3], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_50 = tail(_T_49, 1) @[PRNG.scala 129:67]
        lfsr[3] <= _T_50 @[PRNG.scala 129:57]
      node _T_51 = eq(lfsr[3], lfsr[2]) @[PRNG.scala 128:53]
      when _T_51 : @[PRNG.scala 128:64]
        node _T_52 = add(lfsr[3], UInt<1>("h1")) @[PRNG.scala 129:67]
        node _T_53 = tail(_T_52, 1) @[PRNG.scala 129:67]
        lfsr[3] <= _T_53 @[PRNG.scala 129:57]
      io.ready <= UInt<1>("h1") @[PRNG.scala 134:26]
      when io.gen : @[PRNG.scala 136:29]
        io.puzzle[0] <= lfsr[0] @[PRNG.scala 137:35]
        io.puzzle[1] <= lfsr[1] @[PRNG.scala 137:35]
        io.puzzle[2] <= lfsr[2] @[PRNG.scala 137:35]
        io.puzzle[3] <= lfsr[3] @[PRNG.scala 137:35]
        io.ready <= UInt<1>("h0") @[PRNG.scala 138:34]
        wire _WIRE_2 : UInt<4>[4] @[PRNG.scala 139:40]
        _WIRE_2[0] <= UInt<4>("h0") @[PRNG.scala 139:40]
        _WIRE_2[1] <= UInt<4>("h0") @[PRNG.scala 139:40]
        _WIRE_2[2] <= UInt<4>("h0") @[PRNG.scala 139:40]
        _WIRE_2[3] <= UInt<4>("h0") @[PRNG.scala 139:40]
        lfsr[0] <= _WIRE_2[0] @[PRNG.scala 139:30]
        lfsr[1] <= _WIRE_2[1] @[PRNG.scala 139:30]
        lfsr[2] <= _WIRE_2[2] @[PRNG.scala 139:30]
        lfsr[3] <= _WIRE_2[3] @[PRNG.scala 139:30]

